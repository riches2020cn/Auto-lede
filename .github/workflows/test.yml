name: test

on: 
  repository_dispatch:
  workflow_dispatch:
    
jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 360   # 最多运行6小时，防止意外卡住
    
    steps:
    - name: Before freeing up disk space
      run: |
        echo "Before cleanup:"
        df -hT
        
    - name: Safe disk cleanup (manual)
      run: |
        echo "Start safe cleanup..."
        sudo swapoff -a
        sudo rm -f /swapfile
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/graalvm
        sudo rm -rf /usr/local/.ghcup
        sudo rm -rf /usr/local/share/powershell
        sudo rm -rf /usr/local/share/chromium
        sudo rm -rf /usr/local/lib/node_modules
        sudo docker rmi -f $(sudo docker images -q) || true
        echo "After cleanup:"
        df -hT
        
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL raw.githubusercontent.com/sky2016cn/AutoBuild-lede/refs/heads/master/depends-immortalwrt)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "Asia/Shanghai"
        sudo chown $USER:$GROUPS $GITHUB_WORKSPACE

    - name: Check Space
      run: df -h

    - name: Clone source code
      env: 
        REPO_URL: https://github.com/immortalwrt/immortalwrt
      run: |
        git clone --depth 1 -b v24.10.0 --single-branch --filter=blob:none $REPO_URL immortalwrt || { echo 'Git clone failed!'; exit 1; }
        cd immortalwrt
        echo "src-git helloworld https://github.com/fw876/helloworld.git" >> ./feeds.conf.default
      #echo "src-git passwall_packages https://github.com/xiaorouji/openwrt-passwall-packages.git;main" >> ./feeds.conf.default
      #echo "src-git passwall https://github.com/xiaorouji/openwrt-passwall.git;main" >> ./feeds.conf.default
      #echo "src-git passwall2 https://github.com/xiaorouji/openwrt-passwall2.git;main" >> ./feeds.conf.default
      # 查看版本号：https://downloads.immortalwrt.org/
                
    - name: Update feeds
      working-directory: ./immortalwrt
      run: |
        ./scripts/feeds update -a

    - name: Install feeds
      working-directory: ./immortalwrt
      run: |
        ./scripts/feeds install -a

    - name: Install feeds
      working-directory: ./immortalwrt
      run: |
        ./scripts/feeds install -a

    - name: Import external feeds - OpenClash
      working-directory: ./immortalwrt
      run: |
        git clone --depth=1 https://github.com/vernesong/OpenClash.git package/OpenClash
        mv package/OpenClash/luci-app-openclash package
        rm -rf package/OpenClash  

    # msd_lite 必须放在feeds命令后，L大默认添加了 msd_lite，使用 msd_lite 收看 IPTV
    #- name: Import external feeds - msd_lite
    #  working-directory: ./immortalwrt
    #  run: |
    #    git clone https://github.com/ximiTech/luci-app-msd_lite.git package/luci-app-msd_lite
    #    rm -rf feeds/packages/net/msd_lite
    #    git clone https://github.com/ximiTech/msd_lite.git feeds/packages/net/msd_lite

    # 如果添加上方的 msd_lite，需要再次运行更新feeds命令    
    #- name: Update feeds
    #  working-directory: ./immortalwrt
    #  run: |
    #    ./scripts/feeds update -a
        
    #- name: Install feeds
    #  working-directory: ./immortalwrt
    #  run: |
    #    ./scripts/feeds install -a
        
    # 范例 1: 注意拉取命令的保存路径
    #- name: Import external feeds - OpenAppFilter
    #  working-directory: ./oimmortalwrt
    #  run: |
    #    git clone https://github.com/destan19/OpenAppFilter.git package/OpenAppFilter

    # 范例 2: argon皮肤必须放在feeds命令后，注意保存路径是feeds，替换原有的argon皮肤，如果Lean全部取消了argon皮肤，需要更改保存路径到package/luci-theme-argon
    #- name: Import external feeds - luci-theme-argon
    #  working-directory: ./immortalwrt
    #  run: |
    #    rm -rf feeds/luci/themes/luci-theme-argon
    #    git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git feeds/luci/themes/luci-theme-argon    

    - name: Configuration Customization - Build_ax6000_immortalwrt
      env:
        CONFIG_FILE: 'ax6000_immortalwrt.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE immortalwrt/.config
        chmod +x ./customize_immortalwrt.sh && ./customize_immortalwrt.sh
        cd immortalwrt && make defconfig
        
    - name: Download package
      working-directory: ./immortalwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Build firmware
      working-directory: ./immortalwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s

    - name: Check Space
      run: df -h
        
    - name: Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: ax6000_immortalwrt
        path: immortalwrt/bin

    - name: Upload logs (optional)
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: immortalwrt/logs || ./logs || ./build.log
